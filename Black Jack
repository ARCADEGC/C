#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>
#include <string.h>

int opponent(){
    int r = (rand() % 8) + 15;
    return r;
}

int value(){
    int r = (rand() % 13) + 1;
    switch(r){
        case 1: return r = 65;
        case 10: return r = 88;
        case 11: return r = 74;
        case 12: return r = 81;
        case 13: return r = 75;
        default: return r;
        }
}

int color(){
    int r = (rand() % 4) + 1;
    switch(r){
        case 1: return r = 83;
        case 2: return r = 72;
        case 3: return r = 67;
        }
    return r = 68;
}

int c_back_to_n(int x){
    switch(x){
        case 83: return x = 1;
        case 72: return x = 2;
        case 67: return x = 3;
        case 68: return x = 4;
        default: return x;
    }
}

int f_back_to_n(int y){
    switch(y){
        case 65: return y = 1;
        case 88: return y = 10;
        case 74: return y = 11;
        case 81: return y = 12;
        case 75: return y = 13;
        default: return y;
    }
}

int F_to_total(int t){
    switch(t){
        case 1: return t = 1;
        case 11: return t = 10;
        case 12: return t = 10;
        case 13: return t = 10;
        default: return t;
    }
}

int main() {
    char ans, A, con = '\0';
    int w = 1;
    int total, ace, ace_true = 0;
    printf("\n\n\t\t\t || Welcome to Black Jack ||\n\n");
    int deck[4][13];
    for(int four = 0; four < 4; four++){
        for(int thirteen = 0; thirteen < 13; thirteen++){
            deck[four][thirteen] = 0;
        }
    }
    srand(time(NULL));
    
        printf("Would you like to play? (y/n)\t");
        scanf("%c", &ans);
        if(ans == 'y' || ans == 'Y'){
            printf("\n\n\n");
            do{
                printf("Your hand:\n");
                total = 0;
                for(int i = 0; i <= 1; i++){
                    int C = color();
                    int F = value();
                    if(deck[c_back_to_n(C)][f_back_to_n(F)]==0){
                        if(F == 65 ||F == 88 || F == 74 || F == 81 || F == 75){
                            if(F == 65){
                                ace_true = 1;
                            }
                            printf("\n[%c of %c]", F, C);
                        }
                        else{
                            printf("\n[%i of %c]", F, C);
                        }
                        deck[c_back_to_n(C)][f_back_to_n(F)] = 1;
                        total += F_to_total(f_back_to_n(F));
                        
                    }
                    else{
                        i--;
                    }
                }
                
                if(ace_true == 1){
                            printf("\n\nWould you like your ace to be 1 or 11? (1/11)\t");
                            scanf("%i", &ace);
                            if(ace == 11){
                                total += 10;
                                ace = 0;
                            }
                            ace_true = 0;
                        }
                
                printf("\n\nYour total: %i\n\nWould you like to draw another card? (y/n)\t", total);
                
                //
                
                scanf("%c", &con);
                if(con == 'y' || con == 'Y'){
                    int C = color();
                    int F = value();
                
                    if(deck[c_back_to_n(C)][f_back_to_n(F)]==0){
                        if(F == 65 ||F == 88 || F == 74 || F == 81 || F == 75){
                            if(F == 65){
                                printf("\n\nWould you like your ace to be 1 or 11? (1/11)\t");
                                scanf("%i", &ace);
                                if(ace == 11){
                                    total += 10;
                                    ace = 0;
                                }
                            }
                            printf("\n[%c of %c]", F, C);
                        }
                        else{
                            printf("\n[%i of %c]", F, C);
                        }
                        deck[c_back_to_n(C)][f_back_to_n(F)] = 1;
                        total = total + F_to_total(f_back_to_n(F));
                    }
                }
                
                //
                
                int opp = opponent();
                printf("\n\n\t\t\t || Your opponent has %i ||\n", opp);
                
                if(total == opp){
                    printf("\n\t\t\t\t || DRAW ||\n");
                }
                else{
                    if(total > 21){
                        printf("\n\t\t\t       || YOU LOSE ||\n");
                    }
                    if(opp > 21 && total <= 21){
                        printf("\n\t\t\t       || YOU  WIN ||\n");
                    }
                    if(opp > total && opp <= 21){
                        printf("\n\t\t\t       || YOU LOSE ||\n");
                    }
                    if(opp < total && total <= 21){
                        printf("\n\t\t\t       || YOU  WIN ||\n");
                    }
                }
                
                printf("\n\nAnother game? (y/n)\t");
                scanf("%c", &A);
                if(A == 'y' || A == 'Y'){
                    for(int four = 0; four < 4; four++){
                        for(int thirteen = 0; thirteen < 13; thirteen++){
                        deck[four][thirteen] = 0;
                        }
                    }
                    printf("\n________________________________________________________________________\n\n");
                }
                else{
                    return 0;
                }
            }while(w == 1);
        }
    return 0;
}
